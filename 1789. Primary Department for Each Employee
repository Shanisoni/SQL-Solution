SELECT employee_id, department_id
FROM Employee
WHERE primary_flag = 'Y' 
   OR employee_id IN (
       SELECT employee_id 
       FROM Employee 
       GROUP BY employee_id
       HAVING COUNT(department_id) = 1
   );



üìò SQL Notes: Selecting Primary Department for Each Employee
‚úÖ Problem Statement:

From a table where each employee can belong to one or more departments (with a primary_flag indicating which one is primary), write a query to return each employee's primary department.
üî¢ Key Conditions:

    If an employee has multiple departments, the one with primary_flag = 'Y' is considered primary.

    If an employee has only one department, that department is automatically primary, even if the flag is 'N'.

üß† Final Query:

SELECT employee_id, department_id
FROM Employee
WHERE primary_flag = 'Y' 
   OR employee_id IN (
       SELECT employee_id 
       FROM Employee 
       GROUP BY employee_id
       HAVING COUNT(department_id) = 1
   );

üß© Breakdown:
Clause	What it does	Why it‚Äôs used
WHERE primary_flag = 'Y'	Selects rows with the official primary flag	Needed for employees with multiple departments
employee_id IN (...)	Adds employees with only 1 department	Needed because they won‚Äôt have any 'Y' flag, but still need to be included
GROUP BY employee_id	Groups records by employee	To count how many departments they belong to
HAVING COUNT(department_id) = 1	Filters those who belong to only one department	Ensures correctness for the second condition
üìå Real-World Use Case:

Used when:

    Employees can belong to more than one team/branch.

    You want to report their primary/official department for HR or organizational charts.

‚ö†Ô∏è Common Mistakes to Avoid:
Mistake	Fix
Using WHERE COUNT(...)	‚ùå Not valid ‚Üí Use HAVING with GROUP BY instead
Forgetting employees with 1 department	‚úÖ Use a subquery with HAVING COUNT(*) = 1
Checking only 'Y' flag	‚ùå Will miss single-department employees without 'Y'
‚úÖ Output Format:
employee_id	department_id
1	1
2	1
3	3
4	3
